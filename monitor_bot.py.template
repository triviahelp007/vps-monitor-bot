import psutil
import socket
import requests
import time

BOT_TOKEN = "{{BOT_TOKEN}}"
CHAT_ID = "{{CHAT_ID}}"

def send_message(message):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "Markdown"
    }
    try:
        requests.post(url, data=payload)
    except Exception as e:
        print("Failed to send message:", e)

def check_ping(host="8.8.8.8"):
    try:
        socket.setdefaulttimeout(2)
        socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((host, 53))
        return True
    except Exception:
        return False

def get_stats():
    cpu = psutil.cpu_percent(interval=1)
    ram = psutil.virtual_memory().percent
    disk = psutil.disk_usage("/").percent
    net = psutil.net_io_counters()
    return cpu, ram, disk, net.bytes_sent, net.bytes_recv

def main():
    while True:
        cpu, ram, disk, sent, recv = get_stats()
        is_up = check_ping()

        message = "📊 *VPS Resource Usage*\n"

        if not is_up:
            message += "⚠️ *Ping failed! Server may be offline.*\n"

        message += (
            f"🧠 *CPU*: {cpu:.2f}%\n"
            f"💾 *RAM*: {ram:.2f}%\n"
            f"📂 *Disk*: {disk:.2f}%\n"
            f"🌐 *Net*: ↑ {sent / (1024*1024):.2f} MB | ↓ {recv / (1024*1024):.2f} MB"
        )

        send_message(message)
        time.sleep(120)  # 2 minutes

if __name__ == "__main__":
    main()
