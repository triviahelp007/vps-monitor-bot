import psutil
import shutil
import socket
import requests
import time
import os

BOT_TOKEN = "{{BOT_TOKEN}}"
CHAT_ID = "{{CHAT_ID}}"

def send_message(message):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message}
    try:
        requests.post(url, data=payload)
    except Exception as e:
        print("Failed to send message:", e)

def check_ping(host="8.8.8.8"):
    try:
        socket.setdefaulttimeout(2)
        socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((host, 53))
        return True
    except Exception:
        return False

def get_stats():
    cpu = psutil.cpu_percent(interval=1)
    ram = psutil.virtual_memory().percent
    disk = psutil.disk_usage("/").percent
    net = psutil.net_io_counters()
    return cpu, ram, disk, net.bytes_sent, net.bytes_recv

def main():
    while True:
        cpu, ram, disk, sent, recv = get_stats()
        is_up = check_ping()

        alert_msg = ""

        if not is_up:
            alert_msg += "⚠️ Server appears to be offline (ping failed).\n"
        if disk > 90:
            alert_msg += f"📦 Disk usage alert: {disk}% used\n"

        if alert_msg:
            message = (
                f"📡 *VPS Monitor Alert*\n"
                f"{alert_msg}"
                f"🖥 CPU: {cpu:.2f}%\n"
                f"🧠 RAM: {ram:.2f}%\n"
                f"📶 Network: ↑{sent/1024:.2f} KB ↓{recv/1024:.2f} KB"
            )
            send_message(message)
        time.sleep(300)  # Check every 5 minutes

if __name__ == "__main__":
    main()
